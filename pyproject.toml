[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "metadata-multitool"
version = "0.4.0"
description = "Clean, manage, and optionally poison image metadata for safer uploads"
readme = "README.md"
license = {file="LICENSE"}
requires-python = ">=3.9"
authors = [{name="Metadata Multitool Devs"}]
dependencies = [
  "Pillow>=10.0.0",
  "colorama>=0.4.6",
  "tqdm>=4.65.0",
  "pyyaml>=6.0"
]

[project.scripts]
mm = "metadata_multitool.cli:main"
mm-gui = "metadata_multitool.gui_qt.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]
gui = [
    "PyQt6>=6.0.0",
    "PyQt6-tools>=6.0.0",
]

[tool.pytest.ini_options]
addopts = "-q --cov=src/metadata_multitool --cov-report=term-missing --cov-report=html"
pythonpath = ["src"]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["metadata_multitool"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "PIL.*",
    "colorama.*",
]
ignore_missing_imports = true